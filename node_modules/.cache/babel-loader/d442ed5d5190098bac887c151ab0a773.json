{"ast":null,"code":"// import React, { Component } from \"react\";\n// import { Link } from \"react-router-dom\";\n// import { ToastContainer, toast } from 'react-toastify';\n// import 'react-toastify/dist/ReactToastify.css';\n// toast.configure()\n// /**To Show Add Toastify Text */\n// const notify = () => {\n//   toast.success('Registered Successfully!!',\n//     {\n//       position: \"top-center\",\n//       autoClose: 3000\n//     });\n// }\n// export default class UserRegister extends Component {\n//   constructor() {\n//     super();\n//     this.state = {\n//       name: \"\",\n//       email: \"\",\n//       contactno: \"\",\n//       username: \"\",\n//       password: \"\",\n//       confirmpassword: \"\",\n//       nameError: \"\",\n//       emailError: \"\",\n//       contactnoError: \"\",\n//       usernameError: \"\",\n//       passwordError: \"\",\n//       // confirmpasswordError: \"\",\n//     };\n//     this.register = this.register.bind(this);\n//     this.handleChange = this.handleChange.bind(this);\n//   }\n//   valid() {\n//     if (\n//       this.state.name.length < 4 &&\n//       this.state.email.length < 6 &&\n//       this.state.contactno.length <= 10 &&\n//       this.state.username.length < 6 &&\n//       this.state.password.length < 6 \n//       // this.state.confirmpassword.length < 6\n//     ) {\n//       this.setState({\n//         nameError: \"Invalid Name\",\n//         emailError: \"Please Enter a Valid Email Id\",\n//         contactnoError: \"Please Enter 10 Digit Mobile Number\",\n//         usernameError: \"UserName length shoud be more than 6\",\n//         passwordError: \"Password length should be more than 6\",\n//         // confirmpasswordError: \"Password length should be more than 6\",\n//       });\n//     } else if (this.state.name.length < 1) {\n//       this.setState({\n//         nameError: \"Name length should be more than 1\",\n//       });\n//     } else if (this.state.email.length < 9) {\n//       this.setState({\n//         emailError: \"Email length should be more than 8\",\n//       });\n//     } else if (this.state.contactno.length < 9) {\n//       this.setState({\n//         contactnoError: \"Mobile number should be 10 digits\",\n//       });\n//     } else if (this.state.username.length < 4) {\n//       this.setState({\n//         usernameError: \"Invalid Username\",\n//       });\n//     } else if (this.state.password.length < 6) {\n//       this.setState({\n//         passwordError: \"Password length should be more than 6\",\n//       });\n//     // } else if (this.state.confirmpassword.length < 6) {\n//     //   this.setState({\n//     //     confirmpasswordError: \"Password length should be more than 6\",\n//     //   });\n//     } else {\n//       return true;\n//     }\n//   }\n//   register(e) {\n//     this.setState({\n//       nameError: \"\",\n//       emailError: \"\",\n//       contactnoError: \"\",\n//       usernameError: \"\",\n//       passwordError: \"\",\n//       // confirmpasswordError: \"\",\n//     });\n//     e.preventDefault();\n//     if (this.valid()) {\n//       fetch(\"http://localhost:9093/user/adduser\", {\n//         method: \"POST\",\n//         headers: {\n//           \"content-type\": \"application/json\",\n//           accept: \"application/json\",\n//           \"Access-Control-Allow-Origin\": \"*\",\n//         },\n//         body: JSON.stringify({\n//           name: this.state.name,\n//           email: this.state.email,\n//           contactno: this.state.contactno,\n//           username: this.state.username,\n//           password: this.state.password,\n//           // confirmpassword: this.state.confirmpassword,\n//         }),\n//       })\n//         .then((response) => response.json())\n//         .then((response) => {\n//           toast.success('User Added Successfully!!',\n//             {\n//               position: \"top-center\",\n//               autoClose: 3000\n//             });\n//         })\n//         .catch((err) => {\n//           notify();\n//         });\n//     }\n//   }\n//   handleChange(changeObject) {\n//     this.setState(changeObject);\n//   }\n//   render() {\n//     return (\n//       <form>\n//         <div className=\"userlogin-container\">\n//           <h2 className=\"user-panel\">USER REGISTRATION</h2>\n//           <hr></hr>\n//           <div className=\"userregisterform\">\n//             <label><b>Name</b></label>\n//             <input\n//               type=\"text\"\n//               placeholder=\"Enter name\"\n//               onChange={(e) => this.handleChange({ name: e.target.value })}\n//             />\n//             <p style={{ color: \"red\" }}>{this.state.usernameError}</p>\n//           </div>\n//           <div className=\"userregisterform\">\n//             <label><b>Email</b></label>\n//             <input\n//               type=\"email\"\n//               placeholder=\"Enter Email\"\n//               onChange={(e) => this.handleChange({ email: e.target.value })}\n//             />\n//             <p style={{ color: \"red\" }}>{this.state.emailError}</p>\n//           </div>\n//           <div className=\"userregisterform\">\n//             <label><b>Contact</b></label>\n//             <input\n//               type=\"text\"\n//               placeholder=\"Enter contact\"\n//               onChange={(e) => this.handleChange({ contactno: e.target.value })}\n//             />\n//             <p style={{ color: \"red\" }}>{this.state.contactnoError}</p>\n//           </div>\n//           <div className=\"userregisterform\">\n//             <label><b>UserName</b></label>\n//             <input\n//               type=\"text\"\n//               placeholder=\"Enter username\"\n//               onChange={(e) => this.handleChange({ username: e.target.value })}\n//             />\n//             <p style={{ color: \"red\" }}>{this.state.usernameError}</p>\n//           </div>\n//           <div className=\"userregisterform\">\n//             <label><b>Password</b></label>\n//             <input\n//               type=\"password\"\n//               placeholder=\"Enter password\"\n//               onChange={(e) => this.handleChange({ password: e.target.value })}\n//             />\n//             <p style={{ color: \"red\" }}>{this.state.passwordError}</p>\n//           </div>\n//           {/* <div className=\"userregisterform\">\n//             <label><b>Confirm Password</b></label>\n//             <input\n//               type=\"password\"\n//               placeholder=\"Enter confirm password\"\n//               onChange={(e) =>\n//                 this.handleChange({ confirmpassword: e.target.value })\n//               }\n//             />\n//             <p style={{ color: \"red\" }}>{this.state.confirmpasswordError}</p>\n//           </div> */}\n//           <div className=\"userregisterform\">\n//             <Link\n//               type=\"submit\"\n//               className=\"userregisterbtn\"\n//               to=\"/search\"\n//               onClick={(e) => { this.register(e); }}\n//             >\n//               Submit\n//             </Link>\n//             <ToastContainer />\n//           </div><br></br>\n//           <p className=\"a\">Do u have an account ?<a href='/Login'>Login</a></p><br />\n//           <p className=\"a\">Login as Member..?  <a href='/adminlog'> Login</a></p>\n//         </div>\n//       </form>\n//     );\n//   }\n// }\n//     import React, { useState } from 'react';\n// import axios from 'axios';\n// import {Container,Button} from 'react-bootstrap'\n// import { useNavigate } from 'react-router-dom';\n// import profileImg from '../components/images/profile.png'\n// // //import { CgProfile } from \"react-icons/bs\";\n// // import { CgProfile } from 'react-icons/cg';\n// var mobileTest=\"false\";\n//     var emailTest=\"false\";\n// function User() {\n//     const paperStyle={padding: '45px 30px', width:'500',backgroundColor:\"white\", borderRadius:20,}\n//     const [user, setUser] = useState({\n//         id: \"\",\n//         name:\"\",\n//         username: \"\",\n//         password: \"\",\n//         contactno:\"\",\n//         email: \"\"\n//     })\n//     const [formErrors, setFormErrors] = useState({});\n//     const handleChange = (event) => {\n//         setUser(user => ({ ...user, [event.target.name]: event.target.value }));\n//     }\n//     const emp = () => {\n//         let errors = {};\n//         errors['emailErr'] = \"\"\n//         setFormErrors(errors);\n//     }\n//     const navigate = useNavigate();\n//     const handleOnChange = (email) => {\n//         const re = /^(([^<>()[\\]\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@(([^<>()[\\]\\.,;:\\s@\\\"]+\\.)+[^<>()[\\]\\.,;:\\s@\\\"]{2,})$/i;\n//         if (re.test(email.target.value)) {\n//             emp();\n//             emailTest=\"true\"\n//             handleChange(email);\n//         }\n//         else {\n//             handleChange(email);\n//             if (email.target.value === \"\") { emp(); }\n//             else {\n//                 let errors = {};\n//                 errors['emailErr'] = \"email  is not correct\"\n//                 setFormErrors(errors);\n//             }\n//         }\n//     }\n//     const emp1 = () => {\n//         let errors = {};\n//         errors['contactnoErr'] = \"\"\n//         setFormErrors(errors);\n//     }\n//     const handleOnMobile = (mobile) => {\n//         const re1 = /^([+]?[\\s0-9]+)?(\\d{3}|[(]?[0-9]+[)])?([-]?[\\s]?[0-9])+$/i;\n//         const re=/^(\\+\\d{1,2}\\s)?\\(?\\d{3}\\)?[\\s.-]?\\d{3}[\\s.-]?\\d{4}$/i;\n//         console.log(mobile.target.value);\n//         if (re.test(mobile.target.value)) {\n//             console.log(\"Success\")\n//             emp1();\n//             mobileTest=\"true\";\n//             handleChange(mobile);\n//         }\n//         else {\n//             handleChange(mobile);\n//             if (mobile.target.value === \"\") { emp1(); }\n//             else {\n//                 let errors = {};\n//                 errors['contactnoErr'] = \"Enter 10 digit mobile number\"\n//                 setFormErrors(errors);\n//             }\n//         }\n//     }\n//     const handleSubmit = () => {\n//         //validate form\n//         let errors = {};\n//         if (!user.name) {\n//             errors['userNameErr'] = \"User Name is required\";\n//         }\n//         if (!user.email) {\n//             errors['emailErr'] = \"email  is required\"\n//         }\n//         if (!user.contactno) {\n//             errors['contactno Err'] = \"contactno is required\"\n//         }\n//         console.log(emailTest);\n//         console.log(mobileTest);\n//         if(emailTest===\"false\")\n//         {\n//             errors['emailErr'] = \"please enter correct Email ID\"\n//         }\n//         if(mobileTest==='false')\n//         {\n//             errors['mobileErr'] = \"please enter correct mobile\"\n//         }\n//         if (!user.username) {\n//             errors['usernameErr'] = \"username is required\"\n//         }\n//         if (!user.password) {\n//             errors['passwordErr'] = \"password is required\"\n//         }\n//         // if (!customer.role) {\n//         //     errors['roleErr'] = \"role is required\"\n//         // }\n//         setFormErrors(errors);\n//         const noErrors = Object.keys(errors).length === 0;\n//         if (noErrors) {\n//             const palyload = {\n//                 id: user.id,\n//                 name: user.name,\n//                 username: user.username,\n//                 password: user.password,\n//                 contactno: user.contactno,\n//                 email: customer.email,\n//             }\n//             axios.post(\"http://localhost:9093/user/adduser\", palyload)\n//                 .then(resp => {\n//                     alert( \" Registered Successfully Redirecting to login page..\");\n//                     navigate('/');\n//                 }).catch(error => {\n//                     alert(\"Customer Already Exists\");\n//                 })\n//         }\n//     }\n//     const myStyle={\n//         backgroundImage:\n//         \"url('https://free4kwallpapers.com/uploads/originals/2016/01/03/iguacu-falls-nexus-6p-wallpaper.jpg')\",\n//         height:'100vh',\n//        backgroundSize: 'cover',\n//         backgroundRepeat: 'no-repeat',\n//     };\n//     return (\n//         <div style={myStyle}>\n//         <div style={{\n//             position: 'absolute', left: '50%', top: '50%',\n//             transform: 'translate(-50%, -50%)'\n//         }}>\n//           <Container style={paperStyle}> \n//         <div >\n//         <center> <img src={profileImg} alt=\"Profile\" width=\"50\" height=\"50\" ></img> </center> <p></p>\n//         <center><h1 style={{fontSize:\"20px\"}}>Enter details to register</h1></center><p></p>\n//         <div>\n//                 {/* <label>Customer Name</label> */}\n//                 <input type=\"number\" name=\"id\" value={user.id} onChange={handleChange} placeholder=\"ID\"  className=\"form-control\"/>\n//                 {/* {\n//                     formErrors.customerNameErr && <div style={{ color: \"red\", paddingBottom: 10 }}>{formErrors.customerNameErr}</div>\n//                 } */}\n//             </div>\n//         <div>\n//                 {/* <label>Customer Name</label> */}\n//                 <input type=\"text\" name=\"name\" value={user.name} onChange={handleChange} placeholder=\" Name\"  className=\"form-control\"/>\n//                 {\n//                     formErrors.userNameErr && <div style={{ color: \"red\", paddingBottom: 10 }}>{formErrors.userNameErr}</div>\n//                 }\n//             </div>\n//              <div>\n//              {/* <label>Enter Username</label> */}\n//                 <input type=\"text\" name=\"username\"  value={user.username} onChange={handleChange} placeholder=\"Username\"   className=\"form-control\" />\n//                 {\n//                     formErrors.usernameErr && <div style={{ color: \"red\", paddingBottom: 10 }}>{formErrors.usernameErr}</div>\n//                 }\n//             </div>\n//             <div>\n//                 {/* <label>Password</label> */}\n//                 <input type=\"password\" name=\"password\" value={user.password} onChange={handleChange} placeholder=\"Password\"  className=\"form-control\"/>\n//                 {\n//                     formErrors.passwordErr && <div style={{ color: \"red\", paddingBottom: 10 }}>{formErrors.passwordErr}</div>\n//                 }\n//             </div>\n//             <div>\n//                 {/* <label>Mobile</label> */}\n//                 <input type=\"number\" name=\"contactno\" onChange={handleOnMobile} placeholder=\"Mobile Number\"  className=\"form-control\" />\n//                 {\n//                     formErrors.mobileErr && <div style={{ color: \"red\", paddingBottom: 10 }}>{formErrors.mobileErr}</div>\n//                 }\n//             </div>\n//             <div>\n//                 {/* <label>Email</label> */}\n//                 <input type=\"text\" name=\"email\" onChange={handleOnChange} placeholder=\"Email ID\"  className=\"form-control\"/>\n//                 {\n//                     formErrors.emailErr && <div style={{ color: \"red\", paddingBottom: 10 }}>{formErrors.emailErr}</div>\n//                 }\n//             </div>\n//             {/* <div>\n//                 <label>Role</label>\n//                 <input type=\"role\" name=\"role\" value={customer.role} onChange={handleChange} />\n//                 {\n//                     formErrors.roleErr && <div style={{ color: \"red\", paddingBottom: 10 }}>{formErrors.roleErr}</div>\n//                 }\n//             </div> */}\n//             <div>\n//                 <p></p>\n//                 {/* <button onClick={handleSubmit}>Submit</button> */}\n//                 <Button variant=\"dark\" onClick={handleSubmit}>SIGNUP</Button>\n//                 {/* <button onClick={() => { window.location.href = \"/\" }}> Login</button> */}\n//             </div>\n//         </div>\n//         </Container>\n//     </div>\n//     </div>\n//     )\n// }\n// export default CreateCustomer;","map":{"version":3,"sources":["C:/Users/SIBEVARA/Desktop/On-demand-car-wash-system-frontend/src/components/pages/SignUp.js"],"names":[],"mappingssourcesContent":["    // import React, { Component } from \"react\";\r\n    // import { Link } from \"react-router-dom\";\r\n\r\n    // import { ToastContainer, toast } from 'react-toastify';\r\n    // import 'react-toastify/dist/ReactToastify.css';\r\n    // toast.configure()\r\n\r\n    // /**To Show Add Toastify Text */\r\n    // const notify = () => {\r\n    //   toast.success('Registered Successfully!!',\r\n    //     {\r\n    //       position: \"top-center\",\r\n    //       autoClose: 3000\r\n    //     });\r\n\r\n    // }\r\n\r\n    // export default class UserRegister extends Component {\r\n    //   constructor() {\r\n    //     super();\r\n    //     this.state = {\r\n    //       name: \"\",\r\n    //       email: \"\",\r\n    //       contactno: \"\",\r\n    //       username: \"\",\r\n    //       password: \"\",\r\n    //       confirmpassword: \"\",\r\n    //       nameError: \"\",\r\n    //       emailError: \"\",\r\n    //       contactnoError: \"\",\r\n    //       usernameError: \"\",\r\n    //       passwordError: \"\",\r\n    //       // confirmpasswordError: \"\",\r\n    //     };\r\n    //     this.register = this.register.bind(this);\r\n    //     this.handleChange = this.handleChange.bind(this);\r\n    //   }\r\n    //   valid() {\r\n    //     if (\r\n    //       this.state.name.length < 4 &&\r\n    //       this.state.email.length < 6 &&\r\n    //       this.state.contactno.length <= 10 &&\r\n    //       this.state.username.length < 6 &&\r\n    //       this.state.password.length < 6 \r\n    //       // this.state.confirmpassword.length < 6\r\n    //     ) {\r\n    //       this.setState({\r\n    //         nameError: \"Invalid Name\",\r\n    //         emailError: \"Please Enter a Valid Email Id\",\r\n    //         contactnoError: \"Please Enter 10 Digit Mobile Number\",\r\n    //         usernameError: \"UserName length shoud be more than 6\",\r\n    //         passwordError: \"Password length should be more than 6\",\r\n    //         // confirmpasswordError: \"Password length should be more than 6\",\r\n    //       });\r\n    //     } else if (this.state.name.length < 1) {\r\n    //       this.setState({\r\n    //         nameError: \"Name length should be more than 1\",\r\n    //       });\r\n    //     } else if (this.state.email.length < 9) {\r\n    //       this.setState({\r\n    //         emailError: \"Email length should be more than 8\",\r\n    //       });\r\n    //     } else if (this.state.contactno.length < 9) {\r\n    //       this.setState({\r\n    //         contactnoError: \"Mobile number should be 10 digits\",\r\n    //       });\r\n    //     } else if (this.state.username.length < 4) {\r\n    //       this.setState({\r\n    //         usernameError: \"Invalid Username\",\r\n    //       });\r\n    //     } else if (this.state.password.length < 6) {\r\n    //       this.setState({\r\n    //         passwordError: \"Password length should be more than 6\",\r\n    //       });\r\n    //     // } else if (this.state.confirmpassword.length < 6) {\r\n    //     //   this.setState({\r\n    //     //     confirmpasswordError: \"Password length should be more than 6\",\r\n\r\n    //     //   });\r\n\r\n    //     } else {\r\n    //       return true;\r\n    //     }\r\n    //   }\r\n\r\n    //   register(e) {\r\n    //     this.setState({\r\n    //       nameError: \"\",\r\n    //       emailError: \"\",\r\n    //       contactnoError: \"\",\r\n    //       usernameError: \"\",\r\n    //       passwordError: \"\",\r\n    //       // confirmpasswordError: \"\",\r\n    //     });\r\n    //     e.preventDefault();\r\n    //     if (this.valid()) {\r\n    //       fetch(\"http://localhost:9093/user/adduser\", {\r\n    //         method: \"POST\",\r\n    //         headers: {\r\n    //           \"content-type\": \"application/json\",\r\n    //           accept: \"application/json\",\r\n    //           \"Access-Control-Allow-Origin\": \"*\",\r\n    //         },\r\n    //         body: JSON.stringify({\r\n    //           name: this.state.name,\r\n    //           email: this.state.email,\r\n    //           contactno: this.state.contactno,\r\n    //           username: this.state.username,\r\n    //           password: this.state.password,\r\n    //           // confirmpassword: this.state.confirmpassword,\r\n    //         }),\r\n    //       })\r\n    //         .then((response) => response.json())\r\n    //         .then((response) => {\r\n    //           toast.success('User Added Successfully!!',\r\n    //             {\r\n    //               position: \"top-center\",\r\n    //               autoClose: 3000\r\n    //             });\r\n    //         })\r\n    //         .catch((err) => {\r\n    //           notify();\r\n    //         });\r\n    //     }\r\n    //   }\r\n\r\n    //   handleChange(changeObject) {\r\n    //     this.setState(changeObject);\r\n    //   }\r\n\r\n    //   render() {\r\n    //     return (\r\n    //       <form>\r\n    //         <div className=\"userlogin-container\">\r\n    //           <h2 className=\"user-panel\">USER REGISTRATION</h2>\r\n    //           <hr></hr>\r\n    //           <div className=\"userregisterform\">\r\n    //             <label><b>Name</b></label>\r\n    //             <input\r\n    //               type=\"text\"\r\n    //               placeholder=\"Enter name\"\r\n    //               onChange={(e) => this.handleChange({ name: e.target.value })}\r\n    //             />\r\n    //             <p style={{ color: \"red\" }}>{this.state.usernameError}</p>\r\n    //           </div>\r\n\r\n    //           <div className=\"userregisterform\">\r\n    //             <label><b>Email</b></label>\r\n    //             <input\r\n    //               type=\"email\"\r\n    //               placeholder=\"Enter Email\"\r\n    //               onChange={(e) => this.handleChange({ email: e.target.value })}\r\n    //             />\r\n    //             <p style={{ color: \"red\" }}>{this.state.emailError}</p>\r\n    //           </div>\r\n\r\n    //           <div className=\"userregisterform\">\r\n    //             <label><b>Contact</b></label>\r\n    //             <input\r\n    //               type=\"text\"\r\n    //               placeholder=\"Enter contact\"\r\n    //               onChange={(e) => this.handleChange({ contactno: e.target.value })}\r\n    //             />\r\n    //             <p style={{ color: \"red\" }}>{this.state.contactnoError}</p>\r\n    //           </div>\r\n\r\n    //           <div className=\"userregisterform\">\r\n    //             <label><b>UserName</b></label>\r\n    //             <input\r\n    //               type=\"text\"\r\n    //               placeholder=\"Enter username\"\r\n    //               onChange={(e) => this.handleChange({ username: e.target.value })}\r\n    //             />\r\n    //             <p style={{ color: \"red\" }}>{this.state.usernameError}</p>\r\n    //           </div>\r\n\r\n    //           <div className=\"userregisterform\">\r\n    //             <label><b>Password</b></label>\r\n    //             <input\r\n    //               type=\"password\"\r\n    //               placeholder=\"Enter password\"\r\n    //               onChange={(e) => this.handleChange({ password: e.target.value })}\r\n    //             />\r\n    //             <p style={{ color: \"red\" }}>{this.state.passwordError}</p>\r\n    //           </div>\r\n\r\n    //           {/* <div className=\"userregisterform\">\r\n    //             <label><b>Confirm Password</b></label>\r\n    //             <input\r\n    //               type=\"password\"\r\n    //               placeholder=\"Enter confirm password\"\r\n    //               onChange={(e) =>\r\n    //                 this.handleChange({ confirmpassword: e.target.value })\r\n    //               }\r\n\r\n    //             />\r\n    //             <p style={{ color: \"red\" }}>{this.state.confirmpasswordError}</p>\r\n    //           </div> */}\r\n    //           <div className=\"userregisterform\">\r\n    //             <Link\r\n    //               type=\"submit\"\r\n    //               className=\"userregisterbtn\"\r\n    //               to=\"/search\"\r\n    //               onClick={(e) => { this.register(e); }}\r\n    //             >\r\n    //               Submit\r\n    //             </Link>\r\n    //             <ToastContainer />\r\n    //           </div><br></br>\r\n    //           <p className=\"a\">Do u have an account ?<a href='/Login'>Login</a></p><br />\r\n    //           <p className=\"a\">Login as Member..?  <a href='/adminlog'> Login</a></p>\r\n    //         </div>\r\n    //       </form>\r\n    //     );\r\n    //   }\r\n    // }\r\n\r\n\r\n\r\n\r\n\r\n\r\n//     import React, { useState } from 'react';\r\n// import axios from 'axios';\r\n// import {Container,Button} from 'react-bootstrap'\r\n// import { useNavigate } from 'react-router-dom';\r\n// import profileImg from '../components/images/profile.png'\r\n// // //import { CgProfile } from \"react-icons/bs\";\r\n// // import { CgProfile } from 'react-icons/cg';\r\n\r\n// var mobileTest=\"false\";\r\n//     var emailTest=\"false\";\r\n// function User() {\r\n//     const paperStyle={padding: '45px 30px', width:'500',backgroundColor:\"white\", borderRadius:20,}\r\n//     const [user, setUser] = useState({\r\n//         id: \"\",\r\n//         name:\"\",\r\n//         username: \"\",\r\n//         password: \"\",\r\n//         contactno:\"\",\r\n//         email: \"\"\r\n\r\n//     })\r\n    \r\n//     const [formErrors, setFormErrors] = useState({});\r\n//     const handleChange = (event) => {\r\n//         setUser(user => ({ ...user, [event.target.name]: event.target.value }));\r\n//     }\r\n\r\n//     const emp = () => {\r\n//         let errors = {};\r\n//         errors['emailErr'] = \"\"\r\n//         setFormErrors(errors);\r\n//     }\r\n\r\n//     const navigate = useNavigate();\r\n//     const handleOnChange = (email) => {\r\n//         const re = /^(([^<>()[\\]\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@(([^<>()[\\]\\.,;:\\s@\\\"]+\\.)+[^<>()[\\]\\.,;:\\s@\\\"]{2,})$/i;\r\n  \r\n//         if (re.test(email.target.value)) {\r\n//             emp();\r\n//             emailTest=\"true\"\r\n//             handleChange(email);\r\n            \r\n//         }\r\n//         else {\r\n//             handleChange(email);\r\n//             if (email.target.value === \"\") { emp(); }\r\n//             else {\r\n//                 let errors = {};\r\n//                 errors['emailErr'] = \"email  is not correct\"\r\n//                 setFormErrors(errors);\r\n//             }\r\n//         }\r\n//     }\r\n//     const emp1 = () => {\r\n//         let errors = {};\r\n//         errors['contactnoErr'] = \"\"\r\n//         setFormErrors(errors);\r\n//     }\r\n//     const handleOnMobile = (mobile) => {\r\n//         const re1 = /^([+]?[\\s0-9]+)?(\\d{3}|[(]?[0-9]+[)])?([-]?[\\s]?[0-9])+$/i;\r\n//         const re=/^(\\+\\d{1,2}\\s)?\\(?\\d{3}\\)?[\\s.-]?\\d{3}[\\s.-]?\\d{4}$/i;\r\n//         console.log(mobile.target.value);\r\n//         if (re.test(mobile.target.value)) {\r\n//             console.log(\"Success\")\r\n//             emp1();\r\n//             mobileTest=\"true\";\r\n//             handleChange(mobile);\r\n//         }\r\n//         else {\r\n//             handleChange(mobile);\r\n//             if (mobile.target.value === \"\") { emp1(); }\r\n//             else {\r\n//                 let errors = {};\r\n//                 errors['contactnoErr'] = \"Enter 10 digit mobile number\"\r\n//                 setFormErrors(errors);\r\n//             }\r\n//         }\r\n//     }\r\n\r\n//     const handleSubmit = () => {\r\n//         //validate form\r\n//         let errors = {};\r\n//         if (!user.name) {\r\n//             errors['userNameErr'] = \"User Name is required\";\r\n//         }\r\n//         if (!user.email) {\r\n//             errors['emailErr'] = \"email  is required\"\r\n//         }\r\n//         if (!user.contactno) {\r\n//             errors['contactno Err'] = \"contactno is required\"\r\n//         }\r\n//         console.log(emailTest);\r\n//         console.log(mobileTest);\r\n//         if(emailTest===\"false\")\r\n//         {\r\n//             errors['emailErr'] = \"please enter correct Email ID\"\r\n//         }\r\n//         if(mobileTest==='false')\r\n//         {\r\n//             errors['mobileErr'] = \"please enter correct mobile\"\r\n//         }\r\n        \r\n        \r\n//         if (!user.username) {\r\n//             errors['usernameErr'] = \"username is required\"\r\n//         }\r\n//         if (!user.password) {\r\n//             errors['passwordErr'] = \"password is required\"\r\n//         }\r\n//         // if (!customer.role) {\r\n//         //     errors['roleErr'] = \"role is required\"\r\n//         // }\r\n\r\n\r\n//         setFormErrors(errors);\r\n//         const noErrors = Object.keys(errors).length === 0;\r\n//         if (noErrors) {\r\n//             const palyload = {\r\n//                 id: user.id,\r\n                \r\n//                 name: user.name,\r\n//                 username: user.username,\r\n//                 password: user.password,\r\n//                 contactno: user.contactno,\r\n//                 email: customer.email,\r\n               \r\n                \r\n                \r\n\r\n//             }\r\n//             axios.post(\"http://localhost:9093/user/adduser\", palyload)\r\n//                 .then(resp => {\r\n//                     alert( \" Registered Successfully Redirecting to login page..\");\r\n//                     navigate('/');\r\n//                 }).catch(error => {\r\n//                     alert(\"Customer Already Exists\");\r\n//                 })\r\n\r\n//         }\r\n//     }\r\n//     const myStyle={\r\n//         backgroundImage:\r\n//         \"url('https://free4kwallpapers.com/uploads/originals/2016/01/03/iguacu-falls-nexus-6p-wallpaper.jpg')\",\r\n//         height:'100vh',\r\n//        backgroundSize: 'cover',\r\n//         backgroundRepeat: 'no-repeat',\r\n//     };\r\n//     return (\r\n//         <div style={myStyle}>\r\n//         <div style={{\r\n//             position: 'absolute', left: '50%', top: '50%',\r\n//             transform: 'translate(-50%, -50%)'\r\n//         }}>\r\n\r\n//           <Container style={paperStyle}> \r\n//         <div >\r\n//         <center> <img src={profileImg} alt=\"Profile\" width=\"50\" height=\"50\" ></img> </center> <p></p>\r\n//         <center><h1 style={{fontSize:\"20px\"}}>Enter details to register</h1></center><p></p>\r\n//         <div>\r\n//                 {/* <label>Customer Name</label> */}\r\n//                 <input type=\"number\" name=\"id\" value={user.id} onChange={handleChange} placeholder=\"ID\"  className=\"form-control\"/>\r\n//                 {/* {\r\n//                     formErrors.customerNameErr && <div style={{ color: \"red\", paddingBottom: 10 }}>{formErrors.customerNameErr}</div>\r\n//                 } */}\r\n//             </div>\r\n//         <div>\r\n//                 {/* <label>Customer Name</label> */}\r\n//                 <input type=\"text\" name=\"name\" value={user.name} onChange={handleChange} placeholder=\" Name\"  className=\"form-control\"/>\r\n//                 {\r\n//                     formErrors.userNameErr && <div style={{ color: \"red\", paddingBottom: 10 }}>{formErrors.userNameErr}</div>\r\n//                 }\r\n//             </div>\r\n//              <div>\r\n//              {/* <label>Enter Username</label> */}\r\n//                 <input type=\"text\" name=\"username\"  value={user.username} onChange={handleChange} placeholder=\"Username\"   className=\"form-control\" />\r\n//                 {\r\n//                     formErrors.usernameErr && <div style={{ color: \"red\", paddingBottom: 10 }}>{formErrors.usernameErr}</div>\r\n//                 }\r\n//             </div>\r\n            \r\n\r\n//             <div>\r\n//                 {/* <label>Password</label> */}\r\n//                 <input type=\"password\" name=\"password\" value={user.password} onChange={handleChange} placeholder=\"Password\"  className=\"form-control\"/>\r\n//                 {\r\n//                     formErrors.passwordErr && <div style={{ color: \"red\", paddingBottom: 10 }}>{formErrors.passwordErr}</div>\r\n//                 }\r\n//             </div>\r\n//             <div>\r\n//                 {/* <label>Mobile</label> */}\r\n//                 <input type=\"number\" name=\"contactno\" onChange={handleOnMobile} placeholder=\"Mobile Number\"  className=\"form-control\" />\r\n//                 {\r\n//                     formErrors.mobileErr && <div style={{ color: \"red\", paddingBottom: 10 }}>{formErrors.mobileErr}</div>\r\n//                 }\r\n//             </div>\r\n            \r\n//             <div>\r\n//                 {/* <label>Email</label> */}\r\n//                 <input type=\"text\" name=\"email\" onChange={handleOnChange} placeholder=\"Email ID\"  className=\"form-control\"/>\r\n//                 {\r\n//                     formErrors.emailErr && <div style={{ color: \"red\", paddingBottom: 10 }}>{formErrors.emailErr}</div>\r\n//                 }\r\n//             </div>\r\n           \r\n           \r\n           \r\n//             {/* <div>\r\n//                 <label>Role</label>\r\n//                 <input type=\"role\" name=\"role\" value={customer.role} onChange={handleChange} />\r\n//                 {\r\n//                     formErrors.roleErr && <div style={{ color: \"red\", paddingBottom: 10 }}>{formErrors.roleErr}</div>\r\n//                 }\r\n//             </div> */}\r\n\r\n\r\n//             <div>\r\n//                 <p></p>\r\n//                 {/* <button onClick={handleSubmit}>Submit</button> */}\r\n//                 <Button variant=\"dark\" onClick={handleSubmit}>SIGNUP</Button>\r\n//                 {/* <button onClick={() => { window.location.href = \"/\" }}> Login</button> */}\r\n//             </div>\r\n//         </div>\r\n//         </Container>\r\n//     </div>\r\n//     </div>\r\n//     )\r\n// }\r\n// export default CreateCustomer;"]},"metadata":{},"sourceType":"module"}