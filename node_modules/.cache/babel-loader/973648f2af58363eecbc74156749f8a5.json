{"ast":null,"code":"// import React, { Component } from \"react\";\n// import { Link } from \"react-router-dom\";\n// import { ToastContainer, toast } from 'react-toastify';\n// import 'react-toastify/dist/ReactToastify.css';\n// toast.configure()\n// /**To Show Add Toastify Text */\n// const notify = () => {\n//   toast.success('Registered Successfully!!',\n//     {\n//       position: \"top-center\",\n//       autoClose: 3000\n//     });\n// }\n// export default class UserRegister extends Component {\n//   constructor() {\n//     super();\n//     this.state = {\n//       name: \"\",\n//       email: \"\",\n//       contactno: \"\",\n//       username: \"\",\n//       password: \"\",\n//       confirmpassword: \"\",\n//       nameError: \"\",\n//       emailError: \"\",\n//       contactnoError: \"\",\n//       usernameError: \"\",\n//       passwordError: \"\",\n//       confirmpasswordError: \"\",\n//     };\n//     this.register = this.register.bind(this);\n//     this.handleChange = this.handleChange.bind(this);\n//   }\n//   valid() {\n//     if (\n//       this.state.name.length < 4 &&\n//       this.state.email.length < 6 &&\n//       this.state.contactno.length <= 10 &&\n//       this.state.username.length < 6 &&\n//       this.state.password.length < 6 &&\n//       this.state.confirmpassword.length < 6\n//     ) {\n//       this.setState({\n//         nameError: \"Invalid Name\",\n//         emailError: \"Please Enter a Valid Email Id\",\n//         contactnoError: \"Please Enter 10 Digit Mobile Number\",\n//         usernameError: \"UserName length shoud be more than 6\",\n//         passwordError: \"Password length should be more than 6\",\n//         confirmpasswordError: \"Password length should be more than 6\",\n//       });\n//     } else if (this.state.name.length < 1) {\n//       this.setState({\n//         nameError: \"Name length should be more than 1\",\n//       });\n//     } else if (this.state.email.length < 9) {\n//       this.setState({\n//         emailError: \"Email length should be more than 8\",\n//       });\n//     } else if (this.state.contactno.length < 9) {\n//       this.setState({\n//         contactnoError: \"Mobile number should be 10 digits\",\n//       });\n//     } else if (this.state.username.length < 4) {\n//       this.setState({\n//         usernameError: \"Invalid Username\",\n//       });\n//     } else if (this.state.password.length < 6) {\n//       this.setState({\n//         passwordError: \"Password length should be more than 6\",\n//       });\n//     } else if (this.state.confirmpassword.length < 6) {\n//       this.setState({\n//         confirmpasswordError: \"Password length should be more than 6\",\n//       });\n//     } else {\n//       return true;\n//     }\n//   }\n//   register(e) {\n//     this.setState({\n//       nameError: \"\",\n//       emailError: \"\",\n//       contactnoError: \"\",\n//       usernameError: \"\",\n//       passwordError: \"\",\n//       confirmpasswordError: \"\",\n//     });\n//     e.preventDefault();\n//     if (this.valid()) {\n//       fetch(\"http://localhost:9093/user/adduser\", {\n//         method: \"POST\",\n//         headers: {\n//           \"content-type\": \"application/json\",\n//           accept: \"application/json\",\n//           \"Access-Control-Allow-Origin\": \"*\",\n//         },\n//         body: JSON.stringify({\n//           name: this.state.name,\n//           email: this.state.email,\n//           contactno: this.state.contactno,\n//           username: this.state.username,\n//           password: this.state.password,\n//           confirmpassword: this.state.confirmpassword,\n//         }),\n//       })\n//         .then((response) => response.json())\n//         .then((response) => {\n//           toast.success('User Added Successfully!!',\n//             {\n//               position: \"top-center\",\n//               autoClose: 3000\n//             });\n//         })\n//         .catch((err) => {\n//           notify();\n//         });\n//     }\n//   }\n//   handleChange(changeObject) {\n//     this.setState(changeObject);\n//   }\n//   render() {\n//     return (\n//       <form>\n//         <div className=\"userlogin-container\">\n//           <h2 className=\"user-panel\">USER REGISTRATION</h2>\n//           <hr></hr>\n//           <div className=\"userregisterform\">\n//             <label><b>Name</b></label>\n//             <input\n//               type=\"text\"\n//               placeholder=\"Enter name\"\n//               onChange={(e) => this.handleChange({ name: e.target.value })}\n//             />\n//             <p style={{ color: \"red\" }}>{this.state.usernameError}</p>\n//           </div>\n//           <div className=\"userregisterform\">\n//             <label><b>Email</b></label>\n//             <input\n//               type=\"email\"\n//               placeholder=\"Enter Email\"\n//               onChange={(e) => this.handleChange({ email: e.target.value })}\n//             />\n//             <p style={{ color: \"red\" }}>{this.state.emailError}</p>\n//           </div>\n//           <div className=\"userregisterform\">\n//             <label><b>Contact</b></label>\n//             <input\n//               type=\"text\"\n//               placeholder=\"Enter contact\"\n//               onChange={(e) => this.handleChange({ contactno: e.target.value })}\n//             />\n//             <p style={{ color: \"red\" }}>{this.state.contactnoError}</p>\n//           </div>\n//           <div className=\"userregisterform\">\n//             <label><b>UserName</b></label>\n//             <input\n//               type=\"text\"\n//               placeholder=\"Enter username\"\n//               onChange={(e) => this.handleChange({ username: e.target.value })}\n//             />\n//             <p style={{ color: \"red\" }}>{this.state.usernameError}</p>\n//           </div>\n//           <div className=\"userregisterform\">\n//             <label><b>Password</b></label>\n//             <input\n//               type=\"password\"\n//               placeholder=\"Enter password\"\n//               onChange={(e) => this.handleChange({ password: e.target.value })}\n//             />\n//             <p style={{ color: \"red\" }}>{this.state.passwordError}</p>\n//           </div>\n//           <div className=\"userregisterform\">\n//             <label><b>Confirm Password</b></label>\n//             <input\n//               type=\"password\"\n//               placeholder=\"Enter confirm password\"\n//               onChange={(e) =>\n//                 this.handleChange({ confirmpassword: e.target.value })\n//               }\n//             />\n//             <p style={{ color: \"red\" }}>{this.state.confirmpasswordError}</p>\n//           </div>\n//           <div className=\"userregisterform\">\n//             <Link\n//               type=\"submit\"\n//               className=\"userregisterbtn\"\n//               to=\"/search\"\n//               onClick={(e) => { this.register(e); }}\n//             >\n//               Submit\n//             </Link>\n//             <ToastContainer />\n//           </div><br></br>\n//           <p className=\"a\">Do u have an account ?<a href='/Login'>Login</a></p><br />\n//           <p className=\"a\">Login as Member..?  <a href='/WasherLog'> Login</a></p>\n//         </div>\n//       </form>\n//     );\n//   }\n// }","map":{"version":3,"sources":["C:/Users/SIBEVARA/Desktop/On-demand-car-wash-system-frontend/src/components/pages/SignUp.js"],"names":[],"mappingssourcesContent":["// import React, { Component } from \"react\";\r\n// import { Link } from \"react-router-dom\";\r\n\r\n// import { ToastContainer, toast } from 'react-toastify';\r\n// import 'react-toastify/dist/ReactToastify.css';\r\n// toast.configure()\r\n\r\n// /**To Show Add Toastify Text */\r\n// const notify = () => {\r\n//   toast.success('Registered Successfully!!',\r\n//     {\r\n//       position: \"top-center\",\r\n//       autoClose: 3000\r\n//     });\r\n\r\n// }\r\n\r\n// export default class UserRegister extends Component {\r\n//   constructor() {\r\n//     super();\r\n//     this.state = {\r\n//       name: \"\",\r\n//       email: \"\",\r\n//       contactno: \"\",\r\n//       username: \"\",\r\n//       password: \"\",\r\n//       confirmpassword: \"\",\r\n//       nameError: \"\",\r\n//       emailError: \"\",\r\n//       contactnoError: \"\",\r\n//       usernameError: \"\",\r\n//       passwordError: \"\",\r\n//       confirmpasswordError: \"\",\r\n//     };\r\n//     this.register = this.register.bind(this);\r\n//     this.handleChange = this.handleChange.bind(this);\r\n//   }\r\n//   valid() {\r\n//     if (\r\n//       this.state.name.length < 4 &&\r\n//       this.state.email.length < 6 &&\r\n//       this.state.contactno.length <= 10 &&\r\n//       this.state.username.length < 6 &&\r\n//       this.state.password.length < 6 &&\r\n//       this.state.confirmpassword.length < 6\r\n//     ) {\r\n//       this.setState({\r\n//         nameError: \"Invalid Name\",\r\n//         emailError: \"Please Enter a Valid Email Id\",\r\n//         contactnoError: \"Please Enter 10 Digit Mobile Number\",\r\n//         usernameError: \"UserName length shoud be more than 6\",\r\n//         passwordError: \"Password length should be more than 6\",\r\n//         confirmpasswordError: \"Password length should be more than 6\",\r\n//       });\r\n//     } else if (this.state.name.length < 1) {\r\n//       this.setState({\r\n//         nameError: \"Name length should be more than 1\",\r\n//       });\r\n//     } else if (this.state.email.length < 9) {\r\n//       this.setState({\r\n//         emailError: \"Email length should be more than 8\",\r\n//       });\r\n//     } else if (this.state.contactno.length < 9) {\r\n//       this.setState({\r\n//         contactnoError: \"Mobile number should be 10 digits\",\r\n//       });\r\n//     } else if (this.state.username.length < 4) {\r\n//       this.setState({\r\n//         usernameError: \"Invalid Username\",\r\n//       });\r\n//     } else if (this.state.password.length < 6) {\r\n//       this.setState({\r\n//         passwordError: \"Password length should be more than 6\",\r\n//       });\r\n//     } else if (this.state.confirmpassword.length < 6) {\r\n//       this.setState({\r\n//         confirmpasswordError: \"Password length should be more than 6\",\r\n\r\n//       });\r\n\r\n//     } else {\r\n//       return true;\r\n//     }\r\n//   }\r\n\r\n//   register(e) {\r\n//     this.setState({\r\n//       nameError: \"\",\r\n//       emailError: \"\",\r\n//       contactnoError: \"\",\r\n//       usernameError: \"\",\r\n//       passwordError: \"\",\r\n//       confirmpasswordError: \"\",\r\n//     });\r\n//     e.preventDefault();\r\n//     if (this.valid()) {\r\n//       fetch(\"http://localhost:9093/user/adduser\", {\r\n//         method: \"POST\",\r\n//         headers: {\r\n//           \"content-type\": \"application/json\",\r\n//           accept: \"application/json\",\r\n//           \"Access-Control-Allow-Origin\": \"*\",\r\n//         },\r\n//         body: JSON.stringify({\r\n//           name: this.state.name,\r\n//           email: this.state.email,\r\n//           contactno: this.state.contactno,\r\n//           username: this.state.username,\r\n//           password: this.state.password,\r\n//           confirmpassword: this.state.confirmpassword,\r\n//         }),\r\n//       })\r\n//         .then((response) => response.json())\r\n//         .then((response) => {\r\n//           toast.success('User Added Successfully!!',\r\n//             {\r\n//               position: \"top-center\",\r\n//               autoClose: 3000\r\n//             });\r\n//         })\r\n//         .catch((err) => {\r\n//           notify();\r\n//         });\r\n//     }\r\n//   }\r\n\r\n//   handleChange(changeObject) {\r\n//     this.setState(changeObject);\r\n//   }\r\n\r\n//   render() {\r\n//     return (\r\n//       <form>\r\n//         <div className=\"userlogin-container\">\r\n//           <h2 className=\"user-panel\">USER REGISTRATION</h2>\r\n//           <hr></hr>\r\n//           <div className=\"userregisterform\">\r\n//             <label><b>Name</b></label>\r\n//             <input\r\n//               type=\"text\"\r\n//               placeholder=\"Enter name\"\r\n//               onChange={(e) => this.handleChange({ name: e.target.value })}\r\n//             />\r\n//             <p style={{ color: \"red\" }}>{this.state.usernameError}</p>\r\n//           </div>\r\n\r\n//           <div className=\"userregisterform\">\r\n//             <label><b>Email</b></label>\r\n//             <input\r\n//               type=\"email\"\r\n//               placeholder=\"Enter Email\"\r\n//               onChange={(e) => this.handleChange({ email: e.target.value })}\r\n//             />\r\n//             <p style={{ color: \"red\" }}>{this.state.emailError}</p>\r\n//           </div>\r\n\r\n//           <div className=\"userregisterform\">\r\n//             <label><b>Contact</b></label>\r\n//             <input\r\n//               type=\"text\"\r\n//               placeholder=\"Enter contact\"\r\n//               onChange={(e) => this.handleChange({ contactno: e.target.value })}\r\n//             />\r\n//             <p style={{ color: \"red\" }}>{this.state.contactnoError}</p>\r\n//           </div>\r\n\r\n//           <div className=\"userregisterform\">\r\n//             <label><b>UserName</b></label>\r\n//             <input\r\n//               type=\"text\"\r\n//               placeholder=\"Enter username\"\r\n//               onChange={(e) => this.handleChange({ username: e.target.value })}\r\n//             />\r\n//             <p style={{ color: \"red\" }}>{this.state.usernameError}</p>\r\n//           </div>\r\n\r\n//           <div className=\"userregisterform\">\r\n//             <label><b>Password</b></label>\r\n//             <input\r\n//               type=\"password\"\r\n//               placeholder=\"Enter password\"\r\n//               onChange={(e) => this.handleChange({ password: e.target.value })}\r\n//             />\r\n//             <p style={{ color: \"red\" }}>{this.state.passwordError}</p>\r\n//           </div>\r\n\r\n//           <div className=\"userregisterform\">\r\n//             <label><b>Confirm Password</b></label>\r\n//             <input\r\n//               type=\"password\"\r\n//               placeholder=\"Enter confirm password\"\r\n//               onChange={(e) =>\r\n//                 this.handleChange({ confirmpassword: e.target.value })\r\n//               }\r\n\r\n//             />\r\n//             <p style={{ color: \"red\" }}>{this.state.confirmpasswordError}</p>\r\n//           </div>\r\n//           <div className=\"userregisterform\">\r\n//             <Link\r\n//               type=\"submit\"\r\n//               className=\"userregisterbtn\"\r\n//               to=\"/search\"\r\n//               onClick={(e) => { this.register(e); }}\r\n//             >\r\n//               Submit\r\n//             </Link>\r\n//             <ToastContainer />\r\n//           </div><br></br>\r\n//           <p className=\"a\">Do u have an account ?<a href='/Login'>Login</a></p><br />\r\n//           <p className=\"a\">Login as Member..?  <a href='/WasherLog'> Login</a></p>\r\n//         </div>\r\n//       </form>\r\n//     );\r\n//   }\r\n// }"]},"metadata":{},"sourceType":"module"}