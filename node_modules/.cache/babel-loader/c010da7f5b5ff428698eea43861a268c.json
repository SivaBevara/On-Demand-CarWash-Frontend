{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SIBEVARA\\\\Desktop\\\\On-demand-car-wash-system-frontend\\\\src\\\\components\\\\pages\\\\Header.js\";\n// import React, { useState } from \"react\";\nimport { CDBSidebar } from \"cdbreact\";\nimport React from 'react';\nimport { CDBSidebarContent, CDBSidebarHeader, CDBSidebarFooter, CDBSidebarMenu, CDBSidebarMenuItem } from 'cdbreact';\nimport { NavLink, Link } from 'react-router-dom';\nimport 'react-router-dom'; // //import react pro sidebar components\n// import {\n//   ProSidebar,\n//   Menu,\n//   MenuItem,\n//   SidebarHeader,\n//   SidebarFooter,\n//   SidebarContent,\n// } from \"react-pro-sidebar\";\n// //import icons from react icons\n// import { FaList, FaRegHeart } from \"react-icons/fa\";\n// import { FiHome, FiLogOut, FiArrowLeftCircle, FiArrowRightCircle } from \"react-icons/fi\";\n// import { RiPencilLine } from \"react-icons/ri\";\n// import { BiCog } from \"react-icons/bi\";\n// //import sidebar css from react-pro-sidebar module and our custom css \n// import \"react-pro-sidebar/dist/css/styles.css\";\n// import \"./Header.css\";\n// const Header = () => {\n//     //create initial menuCollapse state using useState hook\n//     const [menuCollapse, setMenuCollapse] = useState(false)\n//     //create a custom function that will change menucollapse state from false to true and true to false\n//   const menuIconClick = () => {\n//     //condition checking to change state from true to false and vice versa\n//     menuCollapse ? setMenuCollapse(false) : setMenuCollapse(true);\n//   };\n//   return (\n//     <>\n//       <div id=\"header\">\n//           {/* collapsed props to change menu size using menucollapse state */}\n//         <ProSidebar collapsed={menuCollapse}>\n//           <SidebarHeader>\n//           <div className=\"logotext\">\n//               {/* small and big change using menucollapse state */}\n//               <p>{menuCollapse ? \"Logo\" : \"Big Logo\"}</p>\n//             </div>\n//             <div className=\"closemenu\" onClick={menuIconClick}>\n//                 {/* changing menu collapse icon on click */}\n//               {menuCollapse ? (\n//                 <FiArrowRightCircle/>\n//               ) : (\n//                 <FiArrowLeftCircle/>\n//               )}\n//             </div>\n//           </SidebarHeader>\n//           <SidebarContent>\n//             <Menu iconShape=\"square\">\n//               <MenuItem active={true} icon={<FiHome />}>\n//                 Home\n//               </MenuItem>\n//               <MenuItem icon={<FaList />}>Category</MenuItem>\n//               <MenuItem icon={<FaRegHeart />}>Favourite</MenuItem>\n//               <MenuItem icon={<RiPencilLine />}>Author</MenuItem>\n//               <MenuItem icon={<BiCog />}>Settings</MenuItem>\n//             </Menu>\n//           </SidebarContent>\n//           <SidebarFooter>\n//             <Menu iconShape=\"square\">\n//               <MenuItem icon={<FiLogOut />}>Logout</MenuItem>\n//             </Menu>\n//           </SidebarFooter>\n//         </ProSidebar>\n//       </div>\n//     </>\n//   );\n// };\n// export default Header;\n// const Sidebar=()=>{\n//   return (\n//       <div style={{display:'flex', height:'100%', overflow:'scroll initial'}}>\n//           <CDBSidebar textColer=\"#fff\" backgroundColor=\"rgb(37, 90, 122)\">\n//               <CDBSidebarHeader prefix={<i className=\"fa fa-bars fa-large\"></i>}>\n//                   <Link to=\"/dashboard\">Dashboard</Link>\n//               </CDBSidebarHeader>\n//               <CDBSidebarContent className=\"sidebar-content\">\n//                   <CDBSidebarMenu>\n//                       <NavLink exact to=\"/dashboard\" activeClassName=\"activeClicked\">\n//                           <CDBSidebarMenuItem icon=\"columns\">\n//                               Transfer\n//                           </CDBSidebarMenuItem>\n//                       </NavLink>\n//                       <NavLink exact to=\"/dashboard\" activeClassName=\"activeClicked\">\n//                           <CDBSidebarMenuItem icon=\"columns\">\n//                               Transfer\n//                           </CDBSidebarMenuItem>\n//                       </NavLink>\n//                       <NavLink exact to=\"/dashboard\" activeClassName=\"activeClicked\">\n//                           <CDBSidebarMenuItem icon=\"columns\">\n//                               Transfer\n//                           </CDBSidebarMenuItem>\n//                       </NavLink>\n//                       <NavLink exact to=\"/dashboard\" activeClassName=\"activeClicked\">\n//                            <CDBSidebarMenuItem icon=\"columns\">\n//                               Transfer\n//                           </CDBSidebarMenuItem>\n//                       </NavLink>\n//                   </CDBSidebarMenu>\n//               </CDBSidebarContent>\n//               <CDBSidebarFooter style={{textAlign:'center'}}>\n//                   <div className=\"sidebar-btn-wrapper\" style={{ padding :'20px 5px' }}>\n//                       sidebar footer\n//                   </div>\n//               </CDBSidebarFooter>\n//           </CDBSidebar>\n//       </div>\n//   )\n// }\n// export default Sidebar;\n\nimport 'react-bootstrap-drawer/lib/style.css'; // import {React} from 'react';\n\nimport { Col, Collapse, Container, Row } from 'react-bootstrap';\nimport { Drawer } from 'react-bootstrap-drawer';\n\nconst ApplicationDrawer = props => {\n  const [open, setOpen] = useState(false);\n\n  const handleToggle = () => setOpen(!open);\n\n  return /*#__PURE__*/React.createElement(Drawer, Object.assign({}, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Drawer.Toggle, {\n    onClick: handleToggle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Collapse, {\n    in: open,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Drawer.Overflow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Drawer.ToC, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Drawer.Header, {\n    href: \"/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 25\n    }\n  }, \"Application\"), /*#__PURE__*/React.createElement(Drawer.Nav, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Drawer.Item, {\n    href: \"/settings\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 29\n    }\n  }, \"Settings\"))))));\n};\n\nconst Application = props => {\n  return /*#__PURE__*/React.createElement(Container, {\n    fluid: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    className: \"flex-xl-nowrap\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    as: ApplicationDrawer,\n    xs: 12,\n    md: 3,\n    lg: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Col, {\n    xs: 12,\n    md: 9,\n    lg: 10,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 17\n    }\n  }, props.children)));\n};","map":{"version":3,"sources":["C:/Users/SIBEVARA/Desktop/On-demand-car-wash-system-frontend/src/components/pages/Header.js"],"names":["CDBSidebar","React","CDBSidebarContent","CDBSidebarHeader","CDBSidebarFooter","CDBSidebarMenu","CDBSidebarMenuItem","NavLink","Link","Col","Collapse","Container","Row","Drawer","ApplicationDrawer","props","open","setOpen","useState","handleToggle","Application","children"],"mappings":";AAAA;AAEA,SAASA,UAAT,QAA2B,UAA3B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,iBAAT,EAA4BC,gBAA5B,EAA8CC,gBAA9C,EAAgEC,cAAhE,EAAgFC,kBAAhF,QAAyG,UAAzG;AACA,SAAQC,OAAR,EAAiBC,IAAjB,QAA4B,kBAA5B;AACA,OAAe,kBAAfsCAAP,C,CACA;;AACA,SACIC,GADJ,EAEIC,QAFJ,EAGIC,SAHJ,EAIIC,GAJJ,QAKO,iBALP;AAMA,SAASC,MAAT,QAAwB,wBAAxB;;AAEA,MAAMC,iBAAiB,GAAIC,KAAD,IAAW;AACjC,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBC,QAAQ,CAAC,KAAD,CAAhC;;AAEA,QAAMC,YAAY,GAAG,MAAMF,OAAO,CAAC,CAACD,IAAF,CAAlC;;AAEA,sBACI,oBAAC,MAAD,oBAAaD,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACI,oBAAC,MAAD,CAAQ,MAAR;AAAe,IAAA,OAAO,EAAGI,YAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAGI,oBAAC,QAAD;AAAU,IAAA,EAAE,EAAGH,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,MAAD,CAAQ,QAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,MAAD,CAAQ,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,MAAD,CAAQ,MAAR;AAAe,IAAA,IAAI,EAAC,GAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADJ,eAGI,oBAAC,MAAD,CAAQ,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,MAAD,CAAQ,IAAR;AAAa,IAAA,IAAI,EAAC,WAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,CAHJ,CADJ,CADJ,CAHJ,CADJ;AAiBH,CAtBD;;AAwBA,MAAMI,WAAW,GAAIL,KAAD,IAAW;AAC3B,sBACI,oBAAC,SAAD;AAAW,IAAA,KAAK,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,GAAD;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,GAAD;AAAK,IAAA,EAAE,EAAGD,iBAAV;AAA8B,IAAA,EAAE,EAAG,EAAnC;AAAwC,IAAA,EAAE,EAAG,CAA7C;AAAiD,IAAA,EAAE,EAAG,CAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAEI,oBAAC,GAAD;AAAK,IAAA,EAAE,EAAG,EAAV;AAAe,IAAA,EAAE,EAAG,CAApB;AAAwB,IAAA,EAAE,EAAG,EAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAoCC,KAAK,CAACM,QAA1C,CAFJ,CADJ,CADJ;AAQH,CATD","sourcesContent":["// import React, { useState } from \"react\";\r\n\r\nimport { CDBSidebar } from \"cdbreact\";\r\nimport React from 'react' \r\nimport { CDBSidebarContent, CDBSidebarHeader, CDBSidebarFooter, CDBSidebarMenu, CDBSidebarMenuItem} from 'cdbreact'; \r\nimport {NavLink, Link} from 'react-router-dom'; \r\nimport {} from 'react-router-dom';\r\n\r\n// //import react pro sidebar components\r\n// import {\r\n//   ProSidebar,\r\n//   Menu,\r\n//   MenuItem,\r\n//   SidebarHeader,\r\n//   SidebarFooter,\r\n//   SidebarContent,\r\n// } from \"react-pro-sidebar\";\r\n\r\n// //import icons from react icons\r\n// import { FaList, FaRegHeart } from \"react-icons/fa\";\r\n// import { FiHome, FiLogOut, FiArrowLeftCircle, FiArrowRightCircle } from \"react-icons/fi\";\r\n// import { RiPencilLine } from \"react-icons/ri\";\r\n// import { BiCog } from \"react-icons/bi\";\r\n\r\n\r\n// //import sidebar css from react-pro-sidebar module and our custom css \r\n// import \"react-pro-sidebar/dist/css/styles.css\";\r\n// import \"./Header.css\";\r\n\r\n\r\n// const Header = () => {\r\n  \r\n//     //create initial menuCollapse state using useState hook\r\n//     const [menuCollapse, setMenuCollapse] = useState(false)\r\n\r\n//     //create a custom function that will change menucollapse state from false to true and true to false\r\n//   const menuIconClick = () => {\r\n//     //condition checking to change state from true to false and vice versa\r\n//     menuCollapse ? setMenuCollapse(false) : setMenuCollapse(true);\r\n//   };\r\n\r\n//   return (\r\n//     <>\r\n//       <div id=\"header\">\r\n//           {/* collapsed props to change menu size using menucollapse state */}\r\n//         <ProSidebar collapsed={menuCollapse}>\r\n//           <SidebarHeader>\r\n//           <div className=\"logotext\">\r\n//               {/* small and big change using menucollapse state */}\r\n//               <p>{menuCollapse ? \"Logo\" : \"Big Logo\"}</p>\r\n//             </div>\r\n//             <div className=\"closemenu\" onClick={menuIconClick}>\r\n//                 {/* changing menu collapse icon on click */}\r\n//               {menuCollapse ? (\r\n//                 <FiArrowRightCircle/>\r\n//               ) : (\r\n//                 <FiArrowLeftCircle/>\r\n//               )}\r\n//             </div>\r\n//           </SidebarHeader>\r\n//           <SidebarContent>\r\n//             <Menu iconShape=\"square\">\r\n//               <MenuItem active={true} icon={<FiHome />}>\r\n//                 Home\r\n//               </MenuItem>\r\n//               <MenuItem icon={<FaList />}>Category</MenuItem>\r\n//               <MenuItem icon={<FaRegHeart />}>Favourite</MenuItem>\r\n//               <MenuItem icon={<RiPencilLine />}>Author</MenuItem>\r\n//               <MenuItem icon={<BiCog />}>Settings</MenuItem>\r\n//             </Menu>\r\n//           </SidebarContent>\r\n//           <SidebarFooter>\r\n//             <Menu iconShape=\"square\">\r\n//               <MenuItem icon={<FiLogOut />}>Logout</MenuItem>\r\n//             </Menu>\r\n//           </SidebarFooter>\r\n//         </ProSidebar>\r\n//       </div>\r\n//     </>\r\n//   );\r\n// };\r\n\r\n// export default Header;\r\n\r\n\r\n\r\n// const Sidebar=()=>{\r\n//   return (\r\n//       <div style={{display:'flex', height:'100%', overflow:'scroll initial'}}>\r\n//           <CDBSidebar textColer=\"#fff\" backgroundColor=\"rgb(37, 90, 122)\">\r\n//               <CDBSidebarHeader prefix={<i className=\"fa fa-bars fa-large\"></i>}>\r\n//                   <Link to=\"/dashboard\">Dashboard</Link>\r\n//               </CDBSidebarHeader>\r\n//               <CDBSidebarContent className=\"sidebar-content\">\r\n//                   <CDBSidebarMenu>\r\n//                       <NavLink exact to=\"/dashboard\" activeClassName=\"activeClicked\">\r\n//                           <CDBSidebarMenuItem icon=\"columns\">\r\n//                               Transfer\r\n//                           </CDBSidebarMenuItem>\r\n//                       </NavLink>\r\n//                       <NavLink exact to=\"/dashboard\" activeClassName=\"activeClicked\">\r\n//                           <CDBSidebarMenuItem icon=\"columns\">\r\n//                               Transfer\r\n//                           </CDBSidebarMenuItem>\r\n//                       </NavLink>\r\n//                       <NavLink exact to=\"/dashboard\" activeClassName=\"activeClicked\">\r\n//                           <CDBSidebarMenuItem icon=\"columns\">\r\n//                               Transfer\r\n//                           </CDBSidebarMenuItem>\r\n//                       </NavLink>\r\n//                       <NavLink exact to=\"/dashboard\" activeClassName=\"activeClicked\">\r\n//                            <CDBSidebarMenuItem icon=\"columns\">\r\n//                               Transfer\r\n//                           </CDBSidebarMenuItem>\r\n//                       </NavLink>\r\n//                   </CDBSidebarMenu>\r\n//               </CDBSidebarContent>\r\n//               <CDBSidebarFooter style={{textAlign:'center'}}>\r\n//                   <div className=\"sidebar-btn-wrapper\" style={{ padding :'20px 5px' }}>\r\n//                       sidebar footer\r\n//                   </div>\r\n//               </CDBSidebarFooter>\r\n//           </CDBSidebar>\r\n//       </div>\r\n//   )\r\n// }\r\n\r\n// export default Sidebar;\r\n\r\n\r\n\r\nimport 'react-bootstrap-drawer/lib/style.css';\r\n// import {React} from 'react';\r\nimport {\r\n    Col,\r\n    Collapse,\r\n    Container,\r\n    Row,\r\n} from 'react-bootstrap';\r\nimport { Drawer, } from 'react-bootstrap-drawer';\r\n\r\nconst ApplicationDrawer = (props) => {\r\n    const [open, setOpen] = useState(false);\r\n\r\n    const handleToggle = () => setOpen(!open);\r\n\r\n    return (\r\n        <Drawer { ...props }>\r\n            <Drawer.Toggle onClick={ handleToggle } />\r\n\r\n            <Collapse in={ open }>\r\n                <Drawer.Overflow>\r\n                    <Drawer.ToC>\r\n                        <Drawer.Header href=\"/\">Application</Drawer.Header>\r\n\r\n                        <Drawer.Nav>\r\n                            <Drawer.Item href=\"/settings\">Settings</Drawer.Item>\r\n                        </Drawer.Nav>\r\n                    </Drawer.ToC>\r\n                </Drawer.Overflow>\r\n            </Collapse>\r\n        </Drawer>\r\n    );\r\n};\r\n\r\nconst Application = (props) => {\r\n    return (\r\n        <Container fluid>\r\n            <Row className=\"flex-xl-nowrap\">\r\n                <Col as={ ApplicationDrawer } xs={ 12 } md={ 3 } lg={ 2 } />\r\n                <Col xs={ 12 } md={ 9 } lg={ 10 }>{ props.children }</Col>\r\n            </Row>\r\n        </Container>\r\n    );\r\n};"]},"metadata":{},"sourceType":"module"}